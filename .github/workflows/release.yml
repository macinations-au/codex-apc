name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.89.0
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            codex-acp -> target

      - name: Build (release)
        working-directory: codex-acp
        run: cargo build --release --locked

      - name: Compute platform identifiers
        id: plat
        shell: bash
        run: |
          echo "arch=$(uname -m)" >> "$GITHUB_OUTPUT"
          echo "os=$(echo "$RUNNER_OS" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Package
        id: pkg
        shell: bash
        run: |
          set -euo pipefail
          VER="${GITHUB_REF_NAME}"
          OS="${{ steps.plat.outputs.os }}"
          ARCH="${{ steps.plat.outputs.arch }}"
          NAME="codex-acp-${VER}-${OS}-${ARCH}"
          mkdir -p package dist
          cp codex-acp/target/release/codex-acp package/
          chmod +x package/codex-acp
          cp LICENSE package/
          cp README.md package/README.md
          cp codex-acp/README.md package/README-codex-acp.md
          tar -C package -czf "dist/${NAME}.tar.gz" .
          echo "asset=dist/${NAME}.tar.gz" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-asset
          path: ${{ steps.pkg.outputs.asset }}
          if-no-files-found: error

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*-asset'
          merge-multiple: true

      - name: Generate checksums
        run: sha256sum *.tar.gz > SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            *.tar.gz
            SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
