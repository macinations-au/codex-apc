name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Cancel superseded CI runs on the same ref/branch
  # Prevents wasting minutes when pushing multiple times quickly
  # (GitHub renders it per-workflow run)
  #
  # Note: concurrency must be at the top level for each job in the matrix
  build:
    name: Build, Lint, Test
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ci-${{ github.workflow }}-${{ github.ref }}-${{ matrix.os }}
      cancel-in-progress: true
    env:
      # Ensure embedded TUI upgrade banner points to this repo's README and
      # uses our install command when developers run locally under CI.
      CODEX_AGENTIC_UPDATE_REPO: ${{ github.repository }}
      CODEX_AGENTIC_UPGRADE_CMD: bash <(curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/install.sh)
      CODEX_UPGRADE_URL: https://github.com/${{ github.repository }}
      # Make cargo more tolerant of flaky networks on GH runners
      CARGO_NET_RETRY: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (pin 1.89.0 for fmt stability)
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.89.0
          components: rustfmt, clippy

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            codex-acp -> target
            codex-agentic -> target
            codex-tui -> target

      - name: Build (debug)
        working-directory: codex-agentic
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        shell: bash
        run: |
          rustc --version
          cargo build -vv | tee ../../ci-build-${{ matrix.os }}.log

      - name: Format check (codex-acp)
        working-directory: codex-acp
        run: cargo fmt --all -- --check
      - name: Format check (codex-tui)
        working-directory: codex-tui
        run: cargo fmt --all -- --check
      - name: Format check (codex-agentic)
        working-directory: codex-agentic
        run: cargo fmt --all -- --check

      - name: Clippy (codex-acp)
        working-directory: codex-acp
        run: cargo clippy -- -D warnings
      - name: Clippy (codex-tui)
        working-directory: codex-tui
        run: cargo clippy -- -D warnings
      - name: Clippy (codex-agentic)
        working-directory: codex-agentic
        run: cargo clippy -- -D warnings

      - name: Test (codex-tui)
        if: runner.os != 'Windows'
        working-directory: codex-tui
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: cargo test --all

      - name: Test (codex-acp)
        if: runner.os != 'Windows'
        working-directory: codex-acp
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: cargo test --all

      - name: Test (codex-agentic)
        if: runner.os != 'Windows'
        working-directory: codex-agentic
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: cargo test --all

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-build-log-${{ matrix.os }}
          path: ci-build-*.log
          if-no-files-found: ignore
